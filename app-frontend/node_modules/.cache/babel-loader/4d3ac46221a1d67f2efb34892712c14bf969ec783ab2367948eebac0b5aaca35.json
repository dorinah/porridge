{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucia\\\\Porridge\\\\app-frontend\\\\src\\\\components\\\\privateRoute\\\\PrivateRoute.tsx\";\nimport * as React from 'react';\nimport AuthenticationService from '../../services/AuthenticationService';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = props => {\n  const {\n    component: Component,\n    ...rest\n  } = props;\n  const isLoggedIn = AuthenticationService.getCurrentUser();\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: routeProps => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n      ...routeProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: routeProps.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","AuthenticationService","Route","Redirect","jsxDEV","_jsxDEV","PrivateRoute","props","component","Component","rest","isLoggedIn","getCurrentUser","render","routeProps","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","state","from","location","_c","$RefreshReg$"],"sources":["C:/Users/Lucia/Porridge/app-frontend/src/components/privateRoute/PrivateRoute.tsx"],"sourcesContent":["import * as React from 'react';\nimport AuthenticationService from '../../services/AuthenticationService';\nimport {\n    Route,\n    Redirect,\n    RouteProps,\n} from 'react-router-dom';\n\ntype PrivateRouteProps = { component: any } & RouteProps;\n\nconst PrivateRoute = (props: PrivateRouteProps) => {\n    const { component: Component, ...rest } = props;\n    const isLoggedIn = AuthenticationService.getCurrentUser();\n\n    return (\n        <Route\n            {...rest}\n            render={(routeProps:any) =>\n                isLoggedIn ? (\n                    <Component {...routeProps} />\n                ) : (\n                        <Redirect\n                            to={{\n                                pathname: '/login',\n                                state: { from: routeProps.location }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,qBAAqB,MAAM,sCAAsC;AACxE,SACIC,KAAK,EACLC,QAAQ,QAEL,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,YAAY,GAAIC,KAAwB,IAAK;EAC/C,MAAM;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGH,KAAK;EAC/C,MAAMI,UAAU,GAAGV,qBAAqB,CAACW,cAAc,CAAC,CAAC;EAEzD,oBACIP,OAAA,CAACH,KAAK;IAAA,GACEQ,IAAI;IACRG,MAAM,EAAGC,UAAc,IACnBH,UAAU,gBACNN,OAAA,CAACI,SAAS;MAAA,GAAKK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzBb,OAAA,CAACF,QAAQ;MACLgB,EAAE,EAAE;QACAC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;UAAEC,IAAI,EAAER,UAAU,CAACS;QAAS;MACvC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAEZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACM,EAAA,GArBIlB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}