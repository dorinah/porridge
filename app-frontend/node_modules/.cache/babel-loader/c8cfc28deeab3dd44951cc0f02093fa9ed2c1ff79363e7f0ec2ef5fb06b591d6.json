{"ast":null,"code":"import axios from \"axios\";\n// import UserService from \"./UserService\";\n\nconst API_URL = \"http://localhost:8741/api/\";\nclass AuthenticationService {\n  login(username, password) {\n    return axios.post(API_URL + \"login_check\", {\n      username,\n      password\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n    window.location.replace(\"/login\");\n  }\n  register(username, email, password) {\n    return axios.post(API_URL + \"register\", {\n      username,\n      email,\n      password\n    });\n  }\n  getCurrentUser() {\n    // const authed = UserService.refreshToken();\n    let user = localStorage.getItem('user');\n    if (user === \"undefined\") {\n      return false;\n    }\n    if (user) {\n      return JSON.parse(user);\n    }\n    return false;\n  }\n}\nconst authServiceInstance = new AuthenticationService();\nexport default authServiceInstance;","map":{"version":3,"names":["axios","API_URL","AuthenticationService","login","username","password","post","logout","localStorage","removeItem","window","location","replace","register","email","getCurrentUser","user","getItem","JSON","parse","authServiceInstance"],"sources":["C:/Users/Lucia/Porridge/app-frontend/src/services/AuthenticationService.tsx"],"sourcesContent":["import axios from \"axios\";\n// import UserService from \"./UserService\";\n\nconst API_URL = \"http://localhost:8741/api/\";\n\nclass AuthenticationService {\n  login(username: any, password: any) {\n    return axios\n      .post(API_URL + \"login_check\", {\n        username,\n        password\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    window.location.replace(\"/login\");\n  }\n\n  register(username: any, email: any, password: any) {\n    return axios.post(API_URL + \"register\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    // const authed = UserService.refreshToken();\n    let user = localStorage.getItem('user');\n    if(user === \"undefined\") {\n      return false;\n    }\n    if(user) {\n      return JSON.parse(user);\n    }\n    return false;\n  }\n  \n}\nconst authServiceInstance = new AuthenticationService();\n\nexport default authServiceInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,qBAAqB,CAAC;EAC1BC,KAAKA,CAACC,QAAa,EAAEC,QAAa,EAAE;IAClC,OAAOL,KAAK,CACTM,IAAI,CAACL,OAAO,GAAG,aAAa,EAAE;MAC7BG,QAAQ;MACRC;IACF,CAAC,CAAC;EACN;EAEAE,MAAMA,CAAA,EAAG;IACPC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC;EACnC;EAEAC,QAAQA,CAACT,QAAa,EAAEU,KAAU,EAAET,QAAa,EAAE;IACjD,OAAOL,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,UAAU,EAAE;MACtCG,QAAQ;MACRU,KAAK;MACLT;IACF,CAAC,CAAC;EACJ;EAEAU,cAAcA,CAAA,EAAG;IACf;IACA,IAAIC,IAAI,GAAGR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC;IACvC,IAAGD,IAAI,KAAK,WAAW,EAAE;MACvB,OAAO,KAAK;IACd;IACA,IAAGA,IAAI,EAAE;MACP,OAAOE,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;IACzB;IACA,OAAO,KAAK;EACd;AAEF;AACA,MAAMI,mBAAmB,GAAG,IAAIlB,qBAAqB,CAAC,CAAC;AAEvD,eAAekB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}